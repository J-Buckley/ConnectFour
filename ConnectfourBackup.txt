/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package connectfour;

import java.util.Scanner;

/**
 *
 * @author Buckley
 */
public class ConnectFour {

    

    static int xWins = 0;
    static int yWins = 0;
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
    
    
    
    boolean newGame = true;
    do{ //while new game
    System.out.println("");
    System.out.println("Welcome to Connect Four!");
    System.out.println("Players take turns choosing the number of their desired\n"
        + "position.");

       
    
    // call method to display board 
    System.out.println("");
    char[][] Board = {{'1','2','3','4'}, {' ',' ',' ',' '}, {' ',' ',' ',' '}, {' ',' ',' ',' '}, {' ',' ',' ',' '}};
  
    
    printBoard(Board);    

    
    // call method to prompt user input (using while loop?)
    boolean moved = false;
    boolean win = false;
    boolean taken = false;
    int playerMove;
    char currentPlayer = 'O';
    Scanner input = new Scanner(System.in);
    
    do //while not win
    {
    // call method to get players
    
    currentPlayer = getPlayer(currentPlayer);
    
    do
    {
        do
        {
        System.out.println(currentPlayer + " 's enter position number: ");
        System.out.println("");
        playerMove = input.nextInt(); 
        if(playerMove > 0 && playerMove <= 4)
        {
            moved = placer(Board, currentPlayer, playerMove, taken);
            System.out.println("");
            printBoard(Board);
            if(!moved)continue;
        }
        else
        {
            System.out.println("Please enter a number 1-4");
            moved = false;
        }
        }while(taken);
    // check for winner
    win = checkWin(Board, win);
    }while(!moved);
    }while(!win);
    //new game?
    System.out.println("new game? (1. yes, 2. no)");
    if(input.nextInt() == 2)
    {
        newGame = false;
    }
        
    
    win = false;
    
    }while(newGame);


} // end main method

// gets players
public static char getPlayer(char currentPlayer)
{

    if(currentPlayer == 'O')
    {
        currentPlayer = 'X'; 
    }
    
    else if(currentPlayer == 'X')
    {
        currentPlayer = 'O';
    }
    return currentPlayer;

}



// displays only the tic tac toe board
public static void printBoard(char[][] board)
{
  // loop for each row
  System.out.println(board[0][0] + "   " + board[0][1] + "   " + board[0][2] + "   " + board[0][3] + "\n-------------");
  System.out.println(board[1][0] + " | " + board[1][1] + " | " + board[1][2] + " | " + board[1][3] + "\n-------------");
  System.out.println(board[2][0] + " | " + board[2][1] + " | " + board[2][2] + " | " + board[2][3] + "\n-------------");
  System.out.println(board[3][0] + " | " + board[3][1] + " | " + board[3][2] + " | " + board[3][3] + "\n-------------");
  System.out.println(board[4][0] + " | " + board[4][1] + " | " + board[4][2] + " | " + board[4][3] + "\n");
} // end display board method

// adds player moves to the board
public static boolean placer(char[][] Board, char currentPlayer, int playerMove, boolean taken)
{
    int i = 0; 
    switch (playerMove){
        case 1: i = 0;
            break;
        case 2: i = 1;
            break;
        case 3: i = 2;
            break;
        case 4: i = 3;
            break;
        }
    
    int j = 4;
    boolean placed = false;
    
    //loop to next empty space
    while(placed == false){
        if(Character.isWhitespace(Board[j][i]))
        {
            Board[j][i] = currentPlayer;
            placed = true;
            taken = true;
        }
        //check for full lane
        else if(Character.isDigit(Board[j][i]))
        {  
            System.out.println("Positions full!");
            return false;
        }
    
        else
        {
            j--;
        }
    }
    return true;
    
    
}

public static boolean checkWin(char Board[][], boolean win)
{

    //rows X
    if(Board[1][0] == 'X' && Board[1][1] == 'X' && Board[1][2] == 'X' && Board[1][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[2][0] == 'X' && Board[2][1] == 'X' && Board[2][2] == 'X' && Board[2][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[3][0] == 'X' && Board[3][1] == 'X' && Board[3][2] == 'X' && Board[3][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[4][0] == 'X' && Board[4][1] == 'X' && Board[4][2] == 'X' && Board[4][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }

    //columns X
    if(Board[1][0] == 'X' && Board[2][0] == 'X' && Board[3][0] == 'X' && Board[4][0] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[1][1] == 'X' && Board[2][1] == 'X' && Board[3][1] == 'X' && Board[4][1] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[1][2] == 'X' && Board[2][2] == 'X' && Board[3][2] == 'X' && Board[4][2] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[1][3] == 'X' && Board[2][3] == 'X' && Board[3][3] == 'X' && Board[4][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    //diagonals X
    if(Board[1][0] == 'X' && Board[2][1] == 'X' && Board[3][2] == 'X' && Board[4][3] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    if(Board[1][3] == 'X' && Board[2][2] == 'X' && Board[3][1] == 'X' && Board[4][0] == 'X')
    {
        win = true;
        System.out.println("X wins!");
        xWins++;
    }
    
    //rows O
    if(Board[1][0] == 'O' && Board[1][1] == 'O' && Board[1][2] == 'O' && Board[1][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[2][0] == 'O' && Board[2][1] == 'O' && Board[3][2] == 'O' && Board[2][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[3][0] == 'O' && Board[3][1] == 'O' && Board[3][2] == 'O' && Board[3][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[4][0] == 'O' && Board[4][1] == 'O' && Board[4][2] == 'O' && Board[4][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }

    //columns O
    if(Board[1][0] == 'O' && Board[2][0] == 'O' && Board[3][0] == 'O' && Board[4][0] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[1][1] == 'O' && Board[2][1] == 'O' && Board[3][1] == 'O' && Board[4][1] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[1][2] == 'O' && Board[2][2] == 'O' && Board[3][2] == 'O' && Board[4][2] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[1][3] == 'O' && Board[2][3] == 'O' && Board[3][3] == 'O' && Board[4][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    //diagonals O
    if(Board[1][0] == 'O' && Board[2][1] == 'O' && Board[3][2] == 'O' && Board[4][3] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    if(Board[1][3] == 'O' && Board[2][2] == 'O' && Board[3][1] == 'O' && Board[4][0] == 'O')
    {
        win = true;
        System.out.println("O wins!");
        yWins++;
    }
    
    //board full
//    boolean Full = true;
//    for(int i = 1; i <= 4; i++)
//    {
//        for(int j = 1; j <= 4; j++)
//        {
//        if(Character.isWhitespace(Board[i][j]))
//        {
//            Full = false;
//        }
//        }
//    }
//    
//   if(Full)
//   {
//       System.out.println("Board full");
//       win = true;
//   }
    if(win)
    {
    System.out.println("X has won " + xWins + " games");
    System.out.println("O has won " + yWins + " games");
    System.out.println("");
    }
    return win;
    

}
}

